{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/app.ts","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js","webpack:///./src/ts/common.ts","webpack:///./src/ts/main-page.ts","webpack:///./src/ts/main-about.ts","webpack:///./src/sss/main-about.sss?f6f8","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/sss/main-slider.sss?cd18","webpack:///./src/ts/standart-page.ts","webpack:///./src/sss/main.sss?c86e"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","App","domReady","callback","document","addEventListener","e","Error","getElements","selector","elements","querySelectorAll","length","getElement","querySelector","elementsGetter","transformNodeListToArray","list","Array","slice","wrap","wrapper","localWrapper","createElement","HTMLElement","each","el","innerHTML","outerHTML","parentNode","replaceChild","_i","elements_1","console","error","EventListener","_super","_this","this","_els","NodeList","__extends","add","event","fn","memo","stylesInDom","isOldIE","window","all","atob","apply","arguments","target","parent","styleTarget","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","options","item","domStyle","id","refs","j","parts","push","addStyle","listToStyles","newStyles","base","part","css","media","sourceMap","insertStyleElement","style","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","removeChild","idx","indexOf","splice","createStyleElement","undefined","attrs","type","nonce","nc","getNonce","addAttrs","keys","forEach","setAttribute","obj","update","remove","result","transform","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","Boolean","join","cssNode","childNodes","doc","body","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","children","getElementsByTagName","location","hash","win","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","$","context","els","tempParent","html","trim","toCreate","match","split","nodeType","unique","uniqueArray","Class","Methods","addClass","className","classes","classList","removeClass","hasClass","contains","toggleClass","toggle","attr","getAttribute","attrName","removeAttr","removeAttribute","data","dom7ElementDataStorage","dataKey","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","eventData","dom7EventData","unshift","is","parents","k","handleEvent","events","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","dom7proxy","trigger","evt","detail","bubbles","cancelable","dataIndex","dispatchEvent","transitionEnd","dom","fireCallBack","outerWidth","includeMargins","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","props","prop","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","prepend","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","closest","find","foundElements","found","toAdd","methodName","Utils","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","paramsPart","decodeURIComponent","isObject","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","gestures","swiper_esm_bundle_Browser","isIE","isEdge","isSafari","ua","toLowerCase","isUiWebView","test","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","isArray","instanceParams","instance","moduleName","modulesParams","moduleParams","modulePropName","moduleProp","moduleEventName","components","use","proto","static","install","installModule","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","swiper_esm_bundle_transition","transitionStart","runCallbacks","direction","autoHeight","dir","animating","swiper_esm_bundle_slide","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","defaults","init","touchEventsTarget","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","breakpointsInverse","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","once","stopIndex","groupSize","ratio","onClick","stopImmediatePropagation","start","passive","move","end","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","innerWidth","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","slugify","includes","currentState","state","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","hideOnClick","isHidden","number","render","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause","__webpack_exports__","app_1","_","swiper_1","crossfade","content","hmr","locals","baseUrl","protocol","host","currentDir","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","tableWrap","tableWrapTrack","shadows","right","track","scrollWidth","shadows_1","setShadowOpacity"],"mappings":"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","file":"js/common.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","class App {\r\n\t// private document: any = document;\r\n\r\n\tpublic static domReady(callback: any): void {\r\n\t\ttry{\r\n\t\t\tdocument.addEventListener(\"DOMContentLoaded\", callback)\r\n\t\t}catch(e){\r\n\t\t\tthrow Error(e)\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getElements(selector: string): NodeList{\r\n\t\tconst elements: any = document.querySelectorAll(selector);\r\n\r\n\t\treturn elements.length ? elements : []\r\n\t\t// return this.elementsGetter(selector)\r\n\t}\r\n\r\n\tpublic static getElement(selector: string): HTMLElement{\r\n\t\tconst element: any = document.querySelector(selector);\r\n\r\n\t\treturn element\r\n\t}\r\n\r\n\tprotected elementsGetter(selector: string): HTMLElement[]{\r\n\t\treturn App.transformNodeListToArray(document.querySelectorAll(selector))\r\n\t}\r\n\r\n\tprotected static transformNodeListToArray(list: NodeList): HTMLElement[]{\r\n\t\ttry{\r\n\t\t\treturn Array.prototype.slice.call(list)\r\n\t\t}catch(e){\r\n\t\t\tthrow Error(e)\r\n\t\t\treturn []\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static wrap(selector: any, wrapper: HTMLElement): void\r\n\tpublic static wrap(selector: any, wrapper: string): void\r\n\tpublic static wrap(selector: any, wrapper: any): void{\r\n\t\tlet localWrapper: HTMLElement;\r\n\r\n\t\tif (typeof wrapper == \"string\")\r\n\t\t\tlocalWrapper = document.createElement(wrapper)\r\n\t\telse if (wrapper instanceof HTMLElement)\r\n\t\t\tlocalWrapper = wrapper\r\n\r\n\t\t// console.log(selector, [localWrapper])\r\n\r\n\t\tApp.each(selector, function(el: HTMLElement, i:number){\r\n\t\t\tlocalWrapper.innerHTML = el.outerHTML\r\n\r\n\t\t\tel.parentNode.replaceChild(localWrapper, el)\r\n\t\t})\r\n\t}\r\n\r\n\tpublic static each(elements: string, callback: any): void\r\n\tpublic static each(elements: HTMLElement[], callback: any): void\r\n\tpublic static each(elements: NodeList, callback: any): void\r\n\tpublic static each(elements: any, callback: any): void{\r\n\r\n\t\tif (!callback){\r\n\t\t\tconsole.error(\"Callback does not exists in yours 'each'\")\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (typeof elements == \"string\")\r\n\t\t\telements = App.transformNodeListToArray(App.getElements(elements))\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\tfor (let el of elements){\r\n\t\t\tcallback(el, i)\r\n\t\t\ti++\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nclass EventListener extends App{\r\n\tprivate _selector: string\r\n\tprivate _els: HTMLElement[]\r\n\r\n\tconstructor (selector: HTMLElement[])\r\n\tconstructor (selector: HTMLElement)\r\n\tconstructor (selector: string)\r\n\tconstructor (selector: any){\r\n\t\tsuper()\r\n\r\n\t\tif (typeof selector == \"string\")\r\n\t\t\tthis._els = this.elementsGetter(selector)\r\n\t\telse if (selector instanceof HTMLElement)\r\n\t\t\tthis._els = [selector]\r\n\t\telse if (selector instanceof NodeList)\r\n\t\t\tthis._els = App.transformNodeListToArray(selector)\r\n\t\telse\r\n\t\t\tthrow Error(`Invalid selector: ${selector}`)\r\n\t}\r\n\r\n\tpublic add(event: string, callback: any): EventListener{\r\n\r\n\t\tApp.each(this._els, function(el:HTMLElement){\r\n\t\t\tel.addEventListener(event, callback(el))\r\n\t\t})\r\n\r\n\t\treturn this\r\n\t}\r\n}\r\n\r\n\r\nexport {App, EventListener}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n","// import * as $ from \"jquery\"\r\n\r\n// interface projectWindow extends Window{\r\n// \t$: any\r\n// \tjQuery: any\r\n// }\r\n\r\n// declare let window: projectWindow\r\n\r\n// window.$ = $;\r\n// window.jQuery = $;\r\n\r\nrequire(\"../sss/main.sss\")\r\nimport \"./main-page\"\r\nimport \"./standart-page\"","import Swiper from \"swiper\"\r\nimport {App, EventListener} from \"./app\"\r\n\r\nimport \"./main-about\"\r\n\r\nrequire(\"../sss/main-slider.sss\")\r\n\r\nApp.domReady((_ : any): void => {\r\n\t;(function(){\r\n\t\tnew Swiper(\".main-slider\", {\r\n\t\t\teffect: \"fade\",\r\n\t\t\tpagination: {\r\n\t\t\t\tel: '.swiper-pagination',\r\n\t\t\t\ttype: 'bullets',\r\n\t\t\t\tclickable: true,\r\n\t\t\t\tdynamicMainBullets: 6\r\n\t\t\t},\r\n\t\t\ta11y: false,\r\n\t\t\tlazy: {\r\n\t\t\t\tloadPrevNext: true,\r\n\t\t\t}\r\n\t\t})\r\n\t})()\r\n})","import Swiper from \"swiper\"\r\nimport {App} from \"./app\"\r\n\r\nrequire(\"../sss/main-about.sss\")\r\n\r\nApp.domReady(function(){\r\n\tApp.each(\".about-slider\", function(el:HTMLElement){\r\n\t\tnew Swiper(el, {\r\n\t\t\teffect: \"fade\",\r\n\t\t\tfadeEffect: {\r\n\t\t\t    crossfade: true\r\n\t\t\t},\r\n\t\t\t// loop: true,\r\n\t\t\ta11y: false,\r\n\t\t\tlazy: {\r\n\t\t\t\tloadPrevNext: true,\r\n\t\t\t\tloadOnTransitionStart: true,\r\n\t\t\t\tloadPrevNextAmount: 3\r\n\t\t\t},\r\n\t\t\tnavigation: {\r\n\t\t\t\tprevEl: \".swiper-button-prev\",\r\n\t\t\t\tnextEl: \".swiper-button-next\",\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n})","\nvar content = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--7-2!../../node_modules/resolve-url-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--7-4!./main-about.sss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"sourceMap\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--7-2!../../node_modules/resolve-url-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--7-4!./main-about.sss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--7-2!../../node_modules/resolve-url-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--7-4!./main-about.sss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","\nvar content = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--7-2!../../node_modules/resolve-url-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--7-4!./main-slider.sss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"sourceMap\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--7-2!../../node_modules/resolve-url-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--7-4!./main-slider.sss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--7-2!../../node_modules/resolve-url-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--7-4!./main-slider.sss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import {App, EventListener} from \"./app\"\r\nimport Swiper from \"swiper\"\r\n\r\ninterface Shadows {\r\n\tright: HTMLElement,\r\n\tleft?: HTMLElement\r\n}\r\n\r\nApp.domReady(() => {\r\n\tconst tableWrap: HTMLElement = document.createElement(\"div\"),\r\n\t\ttableWrapTrack: HTMLElement = document.createElement(\"div\"),\r\n\t\tshadows: Shadows = {\r\n\t\t\tright: document.createElement(\"div\"),\r\n\t\t\tleft: document.createElement(\"div\"),\r\n\t\t};\r\n\r\n\tshadows.right.classList.add(\"table-wrap__shadow\")\r\n\tshadows.right.classList.add(\"table-wrap__shadow--right\")\t\r\n\r\n\tshadows.left.classList.add(\"table-wrap__shadow\")\r\n\tshadows.left.classList.add(\"table-wrap__shadow--left\")\r\n\r\n\ttableWrap.classList.add(\"table-wrap\");\r\n\ttableWrapTrack.classList.add(\"table-wrap__track\");\r\n\r\n\tApp.wrap(\".text-page > table\", tableWrapTrack)\r\n\tApp.wrap(\".table-wrap__track\", tableWrap)\r\n\r\n\tApp.each(\".table-wrap\", (el: HTMLElement) => {\r\n\t\tel.insertBefore(shadows.left, el.querySelector(\"*:first-child\"))\r\n\t\tel.insertBefore(shadows.right, null)\r\n\t})\r\n\r\n\tApp.each(\".table-wrap__track\", function(track: HTMLElement){\r\n\t\tif (track.scrollWidth > track.clientWidth){\r\n\t\t\tlet wrap = track.closest(\".table-wrap\");\r\n\r\n\t\t\tlet shadows: Shadows = {\r\n\t\t\t\tright: wrap.querySelector(\".table-wrap__shadow--right\")\r\n\t\t\t};\r\n\r\n\t\t\tsetShadowOpacity(shadows.right, track.scrollWidth - track.clientWidth)\r\n\t\t}\r\n\r\n\t\tnew EventListener(track).add(\"scroll\", function(el: HTMLElement){\r\n\t\t\tlet wrap = el.closest(\".table-wrap\");\r\n\r\n\t\t\tlet shadows: Shadows = {\r\n\t\t\t\tleft: wrap.querySelector(\".table-wrap__shadow--left\"),\r\n\t\t\t\tright: wrap.querySelector(\".table-wrap__shadow--right\")\r\n\t\t\t};\r\n\r\n\t\t\tsetShadowOpacity(shadows.right, el.scrollWidth - el.clientWidth - el.scrollLeft)\r\n\t\t\tsetShadowOpacity(shadows.left, el.scrollLeft)\r\n\t\t})\r\n\t})\r\n\r\n})\r\n\r\nApp.domReady(() => {\r\n\tApp.each(\".standart-slider\", function(el:HTMLElement){\r\n\t\tlet prevEl: HTMLElement = el.querySelector(\".swiper-button-prev\"),\r\n\t\t\tnextEl: HTMLElement = el.querySelector(\".swiper-button-next\");\r\n\r\n\t\tnew Swiper(el, {\r\n\t\t\tloop: true,\r\n\t\t\ta11y: false,\r\n\t\t\tlazy: {\r\n\t\t\t\tloadPrevNext: true,\r\n\t\t\t\tloadOnTransitionStart: true,\r\n\t\t\t\tloadPrevNextAmount: 3\r\n\t\t\t},\r\n\t\t\tnavigation: {\r\n\t\t\t\tprevEl: prevEl,\r\n\t\t\t\tnextEl: nextEl\r\n\t\t\t},\r\n\t\t})\r\n\t})\r\n})\r\n\r\nconst setShadowOpacity = (element:HTMLElement, scrollWidth: number, offsetWidth: number = 80) => {\r\n\telement.style.opacity = (scrollWidth / offsetWidth <= 1 ? scrollWidth / offsetWidth : 1).toString()\r\n}","\nvar content = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--7-2!../../node_modules/resolve-url-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--7-4!./main.sss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"sourceMap\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--7-2!../../node_modules/resolve-url-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--7-4!./main.sss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--7-2!../../node_modules/resolve-url-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--7-4!./main.sss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}