{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/app.ts","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./src/ts/common.ts","webpack:///./src/ts/main-page.ts","webpack:///./src/ts/main-about.ts","webpack:///./src/sss/main-about.sss?f6f8","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./src/sss/main-slider.sss?cd18","webpack:///./src/ts/standart-page.ts","webpack:///./src/ts/tovar.ts","webpack:///./src/sss/main.sss?c86e"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","App","domReady","callback","document","addEventListener","e","Error","getElements","selector","elements","querySelectorAll","length","getElement","querySelector","elementsGetter","transformNodeListToArray","list","Array","slice","wrap","wrapper","localWrapper","createElement","HTMLElement","each","el","innerHTML","outerHTML","parentNode","replaceChild","_i","elements_1","console","error","EventListener","_super","_this","this","_els","NodeList","__extends","add","event","doc","body","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","$","context","els","tempParent","html","trim","indexOf","toCreate","push","match","split","nodeType","unique","uniqueArray","fn","Class","Methods","addClass","className","classes","j","classList","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","dom","fireCallBack","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","closest","find","foundElements","found","removeChild","toAdd","keys","forEach","methodName","Utils","obj","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","gestures","swiper_esm_bundle_Browser","isIE","isEdge","isSafari","ua","toLowerCase","isUiWebView","test","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","isArray","instanceParams","instance","moduleName","modulesParams","moduleParams","modulePropName","moduleProp","moduleEventName","components","use","proto","static","install","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","swiper_esm_bundle_transition","transitionStart","runCallbacks","direction","autoHeight","dir","animating","swiper_esm_bundle_slide","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","freeMode","newTranslate","min","defaults","init","touchEventsTarget","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","breakpointsInverse","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","once","stopIndex","groupSize","ratio","onClick","stopImmediatePropagation","start","passive","move","end","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","innerWidth","wasLocked","navigation","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","hideOnClick","isHidden","number","render","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause","__webpack_exports__","memo","stylesInDom","isOldIE","all","atob","styleTarget","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","item","domStyle","id","refs","parts","addStyle","listToStyles","newStyles","base","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","before","removeStyleElement","idx","createStyleElement","nonce","nc","getNonce","addAttrs","result","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","Boolean","cssNode","app_1","_","swiper_1","crossfade","content","hmr","locals","baseUrl","protocol","host","currentDir","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","tableWrap","tableWrapTrack","shadows","right","track","scrollWidth","shadows_1","setShadowOpacity"],"mappings":"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","file":"js/common.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","class App {\r\n\t// private document: any = document;\r\n\r\n\tpublic static domReady(callback: any): void {\r\n\t\ttry{\r\n\t\t\tdocument.addEventListener(\"DOMContentLoaded\", callback)\r\n\t\t}catch(e){\r\n\t\t\tthrow Error(e)\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static getElements(selector: string): NodeList{\r\n\t\tconst elements: any = document.querySelectorAll(selector);\r\n\r\n\t\treturn elements.length ? elements : []\r\n\t\t// return this.elementsGetter(selector)\r\n\t}\r\n\r\n\tpublic static getElement(selector: string): HTMLElement{\r\n\t\tconst element: any = document.querySelector(selector);\r\n\r\n\t\treturn element\r\n\t}\r\n\r\n\tprotected elementsGetter(selector: string): HTMLElement[]{\r\n\t\treturn App.transformNodeListToArray(document.querySelectorAll(selector))\r\n\t}\r\n\r\n\tprotected static transformNodeListToArray(list: NodeList): HTMLElement[]{\r\n\t\ttry{\r\n\t\t\treturn Array.prototype.slice.call(list)\r\n\t\t}catch(e){\r\n\t\t\tthrow Error(e)\r\n\t\t\treturn []\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static wrap(selector: any, wrapper: HTMLElement): void\r\n\tpublic static wrap(selector: any, wrapper: string): void\r\n\tpublic static wrap(selector: any, wrapper: any): void{\r\n\t\tlet localWrapper: HTMLElement;\r\n\r\n\t\tif (typeof wrapper == \"string\")\r\n\t\t\tlocalWrapper = document.createElement(wrapper)\r\n\t\telse if (wrapper instanceof HTMLElement)\r\n\t\t\tlocalWrapper = wrapper\r\n\r\n\t\t// console.log(selector, [localWrapper])\r\n\r\n\t\tApp.each(selector, function(el: HTMLElement, i:number){\r\n\t\t\tlocalWrapper.innerHTML = el.outerHTML\r\n\r\n\t\t\tel.parentNode.replaceChild(localWrapper, el)\r\n\t\t})\r\n\t}\r\n\r\n\tpublic static each(elements: string, callback: any): void\r\n\tpublic static each(elements: HTMLElement[], callback: any): void\r\n\tpublic static each(elements: NodeList, callback: any): void\r\n\tpublic static each(elements: any, callback: any): void{\r\n\r\n\t\tif (!callback){\r\n\t\t\tconsole.error(\"Callback does not exists in yours 'each'\")\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (typeof elements == \"string\")\r\n\t\t\telements = App.transformNodeListToArray(App.getElements(elements))\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\tfor (let el of elements){\r\n\t\t\tcallback(el, i)\r\n\t\t\ti++\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nclass EventListener extends App{\r\n\tprivate _selector: string\r\n\tprivate _els: HTMLElement[]\r\n\r\n\tconstructor (selector: HTMLElement[])\r\n\tconstructor (selector: HTMLElement)\r\n\tconstructor (selector: string)\r\n\tconstructor (selector: any){\r\n\t\tsuper()\r\n\r\n\t\tif (typeof selector == \"string\")\r\n\t\t\tthis._els = this.elementsGetter(selector)\r\n\t\telse if (selector instanceof HTMLElement)\r\n\t\t\tthis._els = [selector]\r\n\t\telse if (selector instanceof NodeList)\r\n\t\t\tthis._els = App.transformNodeListToArray(selector)\r\n\t\telse\r\n\t\t\tthrow Error(`Invalid selector: ${selector}`)\r\n\t}\r\n\r\n\tpublic add(event: string, callback: any): EventListener{\r\n\r\n\t\tApp.each(this._els, function(el:HTMLElement){\r\n\t\t\tel.addEventListener(event, callback(el))\r\n\t\t})\r\n\r\n\t\treturn this\r\n\t}\r\n}\r\n\r\n\r\nexport {App, EventListener}","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","// import * as $ from \"jquery\"\r\n\r\n// interface projectWindow extends Window{\r\n// \t$: any\r\n// \tjQuery: any\r\n// }\r\n\r\n// declare let window: projectWindow\r\n\r\n// window.$ = $;\r\n// window.jQuery = $;\r\n\r\nrequire(\"../sss/main.sss\")\r\nimport \"./main-page\"\r\nimport \"./standart-page\"\r\nimport \"./tovar\"","import Swiper from \"swiper\"\r\nimport {App, EventListener} from \"./app\"\r\n\r\nimport \"./main-about\"\r\n\r\nrequire(\"../sss/main-slider.sss\")\r\n\r\nApp.domReady((_ : any): void => {\r\n\t;(function(){\r\n\t\tnew Swiper(\".main-slider\", {\r\n\t\t\teffect: \"fade\",\r\n\t\t\tpagination: {\r\n\t\t\t\tel: '.swiper-pagination',\r\n\t\t\t\ttype: 'bullets',\r\n\t\t\t\tclickable: true,\r\n\t\t\t\tdynamicMainBullets: 6\r\n\t\t\t},\r\n\t\t\ta11y: false,\r\n\t\t\tlazy: {\r\n\t\t\t\tloadPrevNext: true,\r\n\t\t\t}\r\n\t\t})\r\n\t})()\r\n})","import Swiper from \"swiper\"\r\nimport {App} from \"./app\"\r\n\r\nrequire(\"../sss/main-about.sss\")\r\n\r\nApp.domReady(function(){\r\n\tApp.each(\".about-slider\", function(el:HTMLElement){\r\n\t\tnew Swiper(el, {\r\n\t\t\teffect: \"fade\",\r\n\t\t\tfadeEffect: {\r\n\t\t\t    crossfade: true\r\n\t\t\t},\r\n\t\t\t// loop: true,\r\n\t\t\ta11y: false,\r\n\t\t\tlazy: {\r\n\t\t\t\tloadPrevNext: true,\r\n\t\t\t\tloadOnTransitionStart: true,\r\n\t\t\t\tloadPrevNextAmount: 3\r\n\t\t\t},\r\n\t\t\tnavigation: {\r\n\t\t\t\tprevEl: \".swiper-button-prev\",\r\n\t\t\t\tnextEl: \".swiper-button-next\",\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n})","\nvar content = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--7-2!../../node_modules/resolve-url-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--7-4!./main-about.sss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"sourceMap\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--7-2!../../node_modules/resolve-url-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--7-4!./main-about.sss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--7-2!../../node_modules/resolve-url-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--7-4!./main-about.sss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","\nvar content = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--7-2!../../node_modules/resolve-url-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--7-4!./main-slider.sss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"sourceMap\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--7-2!../../node_modules/resolve-url-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--7-4!./main-slider.sss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--7-2!../../node_modules/resolve-url-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--7-4!./main-slider.sss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import {App, EventListener} from \"./app\"\r\nimport Swiper from \"swiper\"\r\n\r\ninterface Shadows {\r\n\tright: HTMLElement,\r\n\tleft?: HTMLElement\r\n}\r\n\r\nApp.domReady(() => {\r\n\tconst tableWrap: HTMLElement = document.createElement(\"div\"),\r\n\t\ttableWrapTrack: HTMLElement = document.createElement(\"div\"),\r\n\t\tshadows: Shadows = {\r\n\t\t\tright: document.createElement(\"div\"),\r\n\t\t\tleft: document.createElement(\"div\"),\r\n\t\t};\r\n\r\n\tshadows.right.classList.add(\"table-wrap__shadow\")\r\n\tshadows.right.classList.add(\"table-wrap__shadow--right\")\t\r\n\r\n\tshadows.left.classList.add(\"table-wrap__shadow\")\r\n\tshadows.left.classList.add(\"table-wrap__shadow--left\")\r\n\r\n\ttableWrap.classList.add(\"table-wrap\");\r\n\ttableWrapTrack.classList.add(\"table-wrap__track\");\r\n\r\n\tApp.wrap(\".text-page > table\", tableWrapTrack)\r\n\tApp.wrap(\".table-wrap__track\", tableWrap)\r\n\r\n\tApp.each(\".table-wrap\", (el: HTMLElement) => {\r\n\t\tel.insertBefore(shadows.left, el.querySelector(\"*:first-child\"))\r\n\t\tel.insertBefore(shadows.right, null)\r\n\t})\r\n\r\n\tApp.each(\".table-wrap__track\", function(track: HTMLElement){\r\n\t\tif (track.scrollWidth > track.clientWidth){\r\n\t\t\tlet wrap = track.closest(\".table-wrap\");\r\n\r\n\t\t\tlet shadows: Shadows = {\r\n\t\t\t\tright: wrap.querySelector(\".table-wrap__shadow--right\")\r\n\t\t\t};\r\n\r\n\t\t\tsetShadowOpacity(shadows.right, track.scrollWidth - track.clientWidth)\r\n\t\t}\r\n\r\n\t\tnew EventListener(track).add(\"scroll\", function(el: HTMLElement){\r\n\t\t\tlet wrap = el.closest(\".table-wrap\");\r\n\r\n\t\t\tlet shadows: Shadows = {\r\n\t\t\t\tleft: wrap.querySelector(\".table-wrap__shadow--left\"),\r\n\t\t\t\tright: wrap.querySelector(\".table-wrap__shadow--right\")\r\n\t\t\t};\r\n\r\n\t\t\tsetShadowOpacity(shadows.right, el.scrollWidth - el.clientWidth - el.scrollLeft)\r\n\t\t\tsetShadowOpacity(shadows.left, el.scrollLeft)\r\n\t\t})\r\n\t})\r\n\r\n})\r\n\r\nApp.domReady(() => {\r\n\tApp.each(\".standart-slider\", function(el:HTMLElement){\r\n\t\tlet prevEl: HTMLElement = el.querySelector(\".swiper-button-prev\"),\r\n\t\t\tnextEl: HTMLElement = el.querySelector(\".swiper-button-next\");\r\n\r\n\t\tnew Swiper(el, {\r\n\t\t\tloop: true,\r\n\t\t\ta11y: false,\r\n\t\t\tlazy: {\r\n\t\t\t\tloadPrevNext: true,\r\n\t\t\t\tloadOnTransitionStart: true,\r\n\t\t\t\tloadPrevNextAmount: 3\r\n\t\t\t},\r\n\t\t\tnavigation: {\r\n\t\t\t\tprevEl: prevEl,\r\n\t\t\t\tnextEl: nextEl\r\n\t\t\t},\r\n\t\t})\r\n\t})\r\n})\r\n\r\nconst setShadowOpacity = (element:HTMLElement, scrollWidth: number, offsetWidth: number = 80) => {\r\n\telement.style.opacity = (scrollWidth / offsetWidth <= 1 ? scrollWidth / offsetWidth : 1).toString()\r\n}","import Swiper from \"swiper\"\r\nimport {App} from \"./app\"\r\n\r\nApp.domReady(function(){\r\n\tApp.each(\".tovar-slider\", function(el:HTMLElement){\r\n\t\tconst prevEl: HTMLElement = el.querySelector(\".swiper-button-prev\"),\r\n\t\t\tnextEl: HTMLElement = el.querySelector(\".swiper-button-next\");\r\n\r\n\t\tnew Swiper(el, {\r\n\t\t\teffect: \"fade\",\r\n\t\t\tfadeEffect: {\r\n\t\t\t    crossfade: true\r\n\t\t\t},\r\n\t\t\tloop: true,\r\n\t\t\ta11y: false,\r\n\t\t\tlazy: {\r\n\t\t\t\tloadPrevNext: true,\r\n\t\t\t\tloadOnTransitionStart: true,\r\n\t\t\t\tloadPrevNextAmount: 3\r\n\t\t\t},\r\n\t\t\tnavigation: {\r\n\t\t\t\tprevEl: prevEl,\r\n\t\t\t\tnextEl: nextEl,\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n})","\nvar content = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--7-2!../../node_modules/resolve-url-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--7-4!./main.sss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"sourceMap\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--7-2!../../node_modules/resolve-url-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--7-4!./main.sss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/index.js??ref--7-2!../../node_modules/resolve-url-loader/index.js!../../node_modules/postcss-loader/src/index.js??ref--7-4!./main.sss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}